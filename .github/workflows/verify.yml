name: Verify

on: [pull_request]

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Expose Application Environment Variables
        if: github.event.pull_request.head.repo.full_name == github.repository
        env:
          REACT_APP_GOOGLE_API_KEY: ${{ secrets.REACT_APP_GOOGLE_API_KEY }}
          MASTER_REACT_APP_GOOGLE_API_KEY: ${{ secrets.MASTER_REACT_APP_GOOGLE_API_KEY }}
          NEXT_REACT_APP_GOOGLE_API_KEY: ${{ secrets.NEXT_REACT_APP_GOOGLE_API_KEY }}
          PROD_REACT_APP_GOOGLE_API_KEY: ${{ secrets.PROD_REACT_APP_GOOGLE_API_KEY }}
        run: |
          # Get branch name from last section of ref
          gitBranch=${GITHUB_REF##*/}
          # Uppercase branch name and replace "-" with "_"
          branchPrefix=$(echo $gitBranch | tr a-z A-Z | tr - _)
          # Create env variable name including branch
          branchApiKeyName="${branchPrefix}_REACT_APP_GOOGLE_API_KEY"
          # Evaluate name variable to get variables value
          branchApiKey=$(eval echo \$${branchApiKeyName})
          # Set value if it exists, otherwise fallback to default
          if [[ ! -z "${branchApiKey}" ]]; then
            echo Using Google API Key for branch \"$gitBranch\"
            googleApiKey=$branchApiKey
          else
            echo Falling back to default Google API Key
            googleApiKey=$REACT_APP_GOOGLE_API_KEY
          fi
          # Expose variable to environment for later steps
          echo "::set-env name=REACT_APP_GOOGLE_API_KEY::$googleApiKey"

        # NOTE: This stage runs if build is a fork (since secrets do not exist)
      - name: Expose Application Environment Variables (for fork)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: |
            # Expose variable to environment for later steps
            echo "::set-env name=REACT_APP_GOOGLE_API_KEY::asdf"

      - name: Verify App
        # TODO: Add calling of lint command once it exists
        run: |
          yarn build
